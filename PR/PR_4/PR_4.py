# Начало
from math import pi

# Program 1 (Из ПР №4  Академии TOP)
# Задача 1: Разработка программы
""" 
База! Работа со строками.
"""
# a = round(pi * 4, 5)
#
#
# greeting = "Hello, world!"
# index = 0
# for index in range(len(greeting)):
#     if greeting[index] == ' ': # Пробел
#         print(f"Символ на индексе {index}: Ды обычный пробел!")
#     else:
#         print(f"Символ на индексе {index}: {greeting[index]}")
#     # index += 1

# greeting = "Hello, world!"
# greeting.replace(1)  # заменяет части строки на другой текст. ???
# print(greeting)

# # Приветственное сообщение
# greeting = "Hello, world!"
# print(greeting)
# # Распечатываем многострочный текст
# multiline_string = """Это многострочная строка,
# которая переносится
# на несколько строк."""
# print(multiline_string)  # Вывод строки на экран
# print()
#
# formatted = " Hello, world! ".strip()  # 'Hello, world!'
# position = formatted.find("world")  # 7
# new_message = formatted.replace("world", "Python")  # 'Hello, Python!'
# capitalized = "hello".upper()  # 'HELLO'
#
# # Разделение строки
# text = "Python is fun"
# words = text.split()  # ['Python', 'is', 'fun']
# csv_line = "one,two,three"
# items = csv_line.split(",")  # ['one', 'two', 'three']
#
# # Объединение строки
# joined = " ".join(words)  # 'Python is fun'
# print(joined)
# csv_joined = ",".join(items)  # 'one,two,three'
# print(joined, csv_joined, sep='\n')
# print()
#
# """Форматирование строк"""
# name = "Alice"
# age = 30
# greeting = f"Hello, {name}. You are {age} years old."
# formatted_string = "Hello, {}. You are {} years old.".format(name, age)
#
#
# tabbed_string = "Here is a tab \t inside a string."
# print(tabbed_string)
# newline_string = "This string is split\nover two lines."
# print(newline_string)

""" Практикум (после теории) """
# Реализация 1 (строки):
"""
Задача 1: Система автоматического уведомления о важных событиях
Ситуация: в офисе часто поступают срочные сообщения от разных отделов, 
и важно быстро реагировать на такие запросы. Сотрудники нуждаются в системе, 
которая помогает автоматически выявлять срочность сообщений и выделять их 
для немедленного внимания.

Задача: создать программу, которая анализирует текст сообщения,
 введённого пользователем, на наличие ключевых слов, указывающих на срочность. 
 Если такие слова найдены, программа должна добавлять к сообщению префикс «ВНИМАНИЕ: » 
и выводить его в верхнем регистре, чтобы подчеркнуть его важность."""

# # Создание списка ключевых слов, которые указывают на срочность сообщения
# keywords = ["срочно", "важно", "немедленно"]
#
# # Запрос текста сообщения от пользователя
# message = input("Введите ваше сообщение: ")
#
# # Проверка наличия ключевых слов в сообщении
# urgent = False
# for keyword in keywords:
#     if keyword in message.lower():
#         urgent = True
#         break
#
# # Форматирование и вывод сообщения
# if urgent:
#     message = "ВНИМАНИЕ: " + message.upper()
# print("Обработанное сообщение:", message)

""" Практикум (после теории) 
Реализация 2 (строки)"""
"""
Задача 2: Система уведомлений для службы поддержки
Ситуация: служба поддержки получает множество запросов от клиентов каждый день, 
среди которых могут быть очень срочные, требующие немедленного реагирования. 
Необходимо разработать инструмент, который поможет операторам быстро выявлять и 
приоритизировать такие запросы.

Задача: разработать программу, которая позволяет оператору вводить текст обращения 
клиента и анализирует его на наличие слов, свидетельствующих о срочности. Если 
обнаружены такие слова, программа должна форматировать текст, добавляя к нему 
префикс «СРОЧНО: » и переводя его в верхний регистр, чтобы оператор мог немедленно 
увидеть и обработать запрос.
"""
# # Инициализация списка срочных ключевых слов, которые могут указывать на необходимость немедленного ответа
# urgent_keywords = ["асап", "сейчас", "немедленно"]
#
# # Ввод текста обращения клиента
# client_message = input("Введите текст обращения клиента: ")
#
# # Анализ текста на наличие срочных ключевых слов
# urgent = False
# for keyword in urgent_keywords:
#     if keyword in client_message.lower():
#         urgent = True
#         break
#
# # Вывод срочного сообщения
# if urgent:
#     client_message = "СРОЧНО: " + client_message.upper()
# print("Обработанное обращение:", client_message)

"""
Уровень 1: Базовый
Задача: напишите программу, которая просит пользователя ввести его имя и 
затем выводит его имя в верхнем регистре.
"""
# name_user = input("""Введите имя пользователя: """)  # Оксана Слесарева
# print('Тип данных name_user: ', type(name_user), "\nВведено: ", name_user, sep='')
# name_user_1 = name_user.upper()
# print("После обработки (т.е. имя в верхнем регистре):", name_user_1)

"""
Уровень 2: Средний
Задача: напишите программу, которая должна запрашивать у пользователя строку и 
выводить её в обратном порядке.
"""

# string = input("Введите строку: ")  # Ольга поймала крысу
# print("\t\t\tВведено:", string)   # АРУ АРУ АРУ АРУ АРУ АРУ :-)
# string_reverse = ""
# for i in range(len(string)):
#     string_reverse += string[(len(string) - 1) - i]
# print("Перевёрнутая строка:", string_reverse)

"""
Уровень 3: Продвинутый
Задача: напишите программу, которая просит пользователя 
ввести абзац текста. Затем программа должна выводить 
количество гласных и согласных букв в этом абзаце.
"""
"""
В русском языке 10 гласных букв: А, Е, Ё, И, О, У, Ы, Э, Ю, Я.
а, е, ё, и, о, у, ы, э, ю, я
Всего в русском языке — 42 звука и 33 буквы. Из них — 10 гласных букв и 6 гласных 
звуков, 21 согласная буква и 36 согласных звуков. 2 буквы — ь и ъ — звука не дают.
К согласным буквам относят: 
б, в, г, д, ж, з, й, к, л, м, н, п, р, с, т, ф, х, ц, ч, ш, щ.
"""

textParagraph = input("Введите абзац текста: ")  # Paragraph

# Списки гласных и согласных букв (Больше: https://sinonim.org/glasnye)
txt_vowels = "а, е, ё, и, о, у, ы, э, ю, я"  # Гласные
lst_vowels = txt_vowels.split(', ')  # Гласные (преобразование в список)
# print("Русские гласные:\n", lst_vowels)
# lst_vowels = ['а', 'е', 'ё', 'и', 'о', 'у', 'ы', 'э', 'ю', 'я']    # Гласные (список)
txt_consonants = "б, в, г, д, ж, з, й, к, л, м, н, п, р, с, т, ф, х, ц, ч, ш, щ"  # Cогласные
lst_consonants = txt_consonants.split(', ')  # Cогласные (преобразование в список)
# print("Русские согласные:\n", lst_consonants)
# lst_consonants = ['б', 'в', 'г', 'д', 'ж', 'з', 'й', 'к', 'л', 'м', 'н', 'п',
# 'р', 'с', 'т', 'ф', 'х', 'ц', 'ч', 'ш', 'щ']    # Согласные (список)

# textParagraph = "Аппроксимация данных"  # Образец текста ввода
# """              01234567890123456789 """ # Len = 20 символов [0:19]
"""Цикл подсчёта гласных"""
low_textParag = textParagraph.lower()  # Преобразование в нижний регистр (строчные б.)
print("В нижнем регистре:", low_textParag)
count_vowels = 0  # Создан счётчик гласных
for i in range(len(low_textParag)):
    if low_textParag[i] in lst_vowels:  # проверка наличия буквы в списке гласных
        count_vowels += 1  # Подсчёт гласных
        # print(f"Гласная № {count_vowels}", low_textParag[i])
print("Количество гласных: ", count_vowels)
"""Цикл подсчёта согласных"""
count_consonants = 0  # Создан счётчик согласных
for i in range(len(low_textParag)):
    if low_textParag[i] in lst_consonants:  # проверка наличия буквы в списке согласных
        count_consonants += 1  # Подсчёт согласных
        # print(f"Согласная № {count_consonants}", low_textParag[i])
print("Количество согласных: ", count_consonants)
# Аппроксимация данных это эффективный метод получения предварительной статистики

