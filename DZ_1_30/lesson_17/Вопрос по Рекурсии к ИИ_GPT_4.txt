Вопрос:
Ты программист Python: Приведи пример возможности выделения счётчика в рекурсивных функциях.

Ответ:
В Python можно использовать рекурсивные функции для создания счетчика, который будет отслеживать количество вызовов функции. Один из способов сделать это — передавать дополнительный параметр в функцию, который будет увеличиваться при каждом вызове. Ниже приведён пример, где рекурсивная функция считает, сколько раз она была вызвана:

```python
def recursive_function(n, counter=0):
    # Увеличиваем счетчик на 1 при каждом вызове
    counter += 1
    
    # Базовый случай: если n меньше или равно 0, возвращаем счетчик
    if n <= 0:
        print(f"Количество вызовов функции: {counter}")
        return counter
    
    # Рекурсивный вызов с уменьшением n
    return recursive_function(n - 1, counter)

# Вызов функции с начальным значением
recursive_function(5)
```

### Объяснение кода:

1. **Параметры функции**: Функция `recursive_function` принимает два параметра: `n`, который мы будем уменьшать, и `counter`, который по умолчанию равен 0. Счетчик увеличивается на 1 при каждом вызове функции.

2. **Базовый случай**: Если `n` меньше или равно 0, мы выводим текущее значение счетчика и возвращаем его.

3. **Рекурсивный вызов**: Если `n` больше 0, мы рекурсивно вызываем `recursive_function`, уменьшая значение `n` на 1 и передавая текущее значение `counter`.

### Выходные данные
Если вы вызовете `recursive_function(5)`, вывод будет:

```
Количество вызовов функции: 6
```

Это означает, что функция была вызвана 6 раз: от 5 до 0 (включительно).